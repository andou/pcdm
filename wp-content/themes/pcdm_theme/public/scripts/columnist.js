// Generated by CoffeeScript 1.6.3
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  window.Columnist = (function() {
    function Columnist(ref) {
      this.ref = ref;
      this.onResize = __bind(this.onResize, this);
      this.onImageLoaded = __bind(this.onImageLoaded, this);
      this.cols = parseInt(this.ref.attr('data-columns')) || 3;
      this.items = this.ref.find('div .block');
      this.images = this.ref.find('img');
      this.loaded = 0;
      this.is_ready = false;
      this.preloadImages();
    }

    Columnist.prototype.preloadImages = function() {
      var i, _i, _ref, _results;
      _results = [];
      for (i = _i = 0, _ref = this.images.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
        _results.push(this.setPreloader($(this.images[i]).attr('src')));
      }
      return _results;
    };

    Columnist.prototype.setPreloader = function(url) {
      var preloader;
      preloader = new Image();
      preloader.onload = this.onImageLoaded;
      return preloader.src = url;
    };

    Columnist.prototype.onImageLoaded = function() {
      this.loaded++;
      if (this.loaded === this.images.length) {
        this.setItems();
        return this.is_ready = true;
      }
    };

    Columnist.prototype.setItems = function() {
      var col, delta, expected_top, h, i, item, item_over, item_under, j, matrix, offset_top, _i, _j, _k, _ref, _ref1, _ref2, _results;
      matrix = [];
      for (i = _i = 0, _ref = this.cols; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
        matrix.push([]);
      }
      for (i = _j = 0, _ref1 = this.items.length; 0 <= _ref1 ? _j < _ref1 : _j > _ref1; i = 0 <= _ref1 ? ++_j : --_j) {
        item = $(this.items[i]);
        col = Math.round((item.position().left / this.ref.width()) * this.cols);
        matrix[col].push(item);
      }
      _results = [];
      for (i = _k = 0, _ref2 = matrix.length; 0 <= _ref2 ? _k < _ref2 : _k > _ref2; i = 0 <= _ref2 ? ++_k : --_k) {
        h = 0;
        offset_top = matrix[i][0].position().top;
        _results.push((function() {
          var _l, _ref3, _results1;
          _results1 = [];
          for (j = _l = 1, _ref3 = matrix[i].length; 1 <= _ref3 ? _l < _ref3 : _l > _ref3; j = 1 <= _ref3 ? ++_l : --_l) {
            item_over = matrix[i][j - 1];
            item_under = matrix[i][j];
            expected_top = h + item_over.height() + parseInt(item_over.css('margin-bottom')) + 2 * parseInt(item_over.css('border-top-width'));
            delta = item_under.position().top - offset_top - expected_top;
            item_under.css({
              'margin-top': "" + (-delta) + "px"
            });
            _results1.push(h = expected_top);
          }
          return _results1;
        })());
      }
      return _results;
    };

    Columnist.prototype.onResize = function() {
      if (this.is_ready) {
        return this.setItems();
      }
    };

    return Columnist;

  })();

}).call(this);
